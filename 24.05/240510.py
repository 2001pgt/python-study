#최대값 2566
# 문제
# <그림 1>과 같이 9×9 격자판에 쓰여진 81개의 자연수 또는 0이 주어질 때, 이들 중 최댓값을 찾고 그 최댓값이 몇 행 몇 열에 위치한 수인지 구하는 프로그램을 작성하시오.

# 예를 들어, 다음과 같이 81개의 수가 주어지면

#  	1열	2열	3열	4열	5열	6열	7열	8열	9열
# 1행	3	23	85	34	17	74	25	52	65
# 2행	10	7	39	42	88	52	14	72	63
# 3행	87	42	18	78	53	45	18	84	53
# 4행	34	28	64	85	12	16	75	36	55
# 5행	21	77	45	35	28	75	90	76	1
# 6행	25	87	65	15	28	11	37	28	74
# 7행	65	27	75	41	7	89	78	64	39
# 8행	47	47	70	45	23	65	3	41	44
# 9행	87	13	82	38	31	12	29	29	80
# 이들 중 최댓값은 90이고, 이 값은 5행 7열에 위치한다.

# 입력
# 첫째 줄부터 아홉 번째 줄까지 한 줄에 아홉 개씩 수가 주어진다. 주어지는 수는 100보다 작은 자연수 또는 0이다.

# 출력
# 첫째 줄에 최댓값을 출력하고, 둘째 줄에 최댓값이 위치한 행 번호와 열 번호를 빈칸을 사이에 두고 차례로 출력한다. 최댓값이 두 개 이상인 경우 그 중 한 곳의 위치를 출력한다.
#나의 풀이
#9X9 수 입력 받기
arr = [] 
for _ in range(9):
    arr.append(list(map(int,input().split())))

max_num = 0 #최대값
x = 0 #최대값의 행
y = 0 #최대값의 열

#9X9 행렬의 인자들을 하나씩 최대값과 비교하여 최대값보다 크다면 해당 인자를 최대값으로 하고 좌표를 집어 넣는다
for i in range(9):
    for i2 in range(9):
        if arr[i][i2] > max_num:
            max_num = arr[i][i2]
            x = i2
            y = i
print(max_num)
print(y+1,x+1)#인덱스는 실제 좌표보다 -1이므로 +1을 해준다.

#다른 사람 풀이
#리스트 컴프리헨션을 사용하여 table세팅
table = [list(map(int, input().split())) for _ in range(9)]

max_num = 0 #최대값
max_row, max_col = 0, 0 # 각 행렬 좌표
for row in range(9):
    for col in range(9):
        if max_num <= table[row][col]:
            max_row = row + 1
            max_col = col + 1
            max_num = table[row][col]

print(max_num)
print(max_row, max_col) #이사람은 마지막에 +1 하지않고 중간에 해주었다.

#전체적으로 비슷한 방법으로 푼거같다 리스트 컴프리헨션을 잘활용하여 코드를 간결하게 작성한 점이 눈에 띈다
#리스트 컴프리헨션
squares = [x**2 for x in range(1, 11)]
print(squares)
#리스트 컴프리헨션은 위의 식처럼 특정 계산된 값을 리스트에 추가해서 새로운 리스트를 만들때 사용한다 위의 값을 출력하면 1~10까지 제곱의 리스트가 생성된다.
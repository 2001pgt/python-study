# 회사에 있는 사람 7785
# 문제
# 상근이는 세계적인 소프트웨어 회사 기글에서 일한다. 이 회사의 가장 큰 특징은 자유로운 출퇴근 시간이다. 따라서, 직원들은 반드시 9시부터 6시까지 회사에 있지 않아도 된다.

# 각 직원은 자기가 원할 때 출근할 수 있고, 아무때나 퇴근할 수 있다.

# 상근이는 모든 사람의 출입카드 시스템의 로그를 가지고 있다. 이 로그는 어떤 사람이 회사에 들어왔는지, 나갔는지가 기록되어져 있다. 로그가 주어졌을 때, 현재 회사에 있는 모든 사람을 구하는 프로그램을 작성하시오.

# 입력
# 첫째 줄에 로그에 기록된 출입 기록의 수 n이 주어진다. (2 ≤ n ≤ 106) 다음 n개의 줄에는 출입 기록이 순서대로 주어지며, 각 사람의 이름이 주어지고 "enter"나 "leave"가 주어진다. "enter"인 경우는 출근, "leave"인 경우는 퇴근이다.

# 회사에는 동명이인이 없으며, 대소문자가 다른 경우에는 다른 이름이다. 사람들의 이름은 알파벳 대소문자로 구성된 5글자 이하의 문자열이다.

# 출력
# 현재 회사에 있는 사람의 이름을 사전 순의 역순으로 한 줄에 한 명씩 출력한다.

# 풀이
# 입력
import sys
input = sys.stdin.readline

n = int(input())
# 빈 딕셔너리 생성
dict = {}
# 딕셔너리에 현재 출입자의 이름과 상태 기록
for _ in range(n):
    name ,now = input().split()
    dict[name] = now
# 빈 리스트 생성
worker = []
# 딕셔너리에 직원의 출입상태가 enter면 worker에 추가
for i in dict:
    if dict[i] == 'enter':
        worker.append(i)
# 정렬
worker =sorted(worker)
# 리버스
worker = reversed(worker) 
# 출력
for i in worker:
    print(i)

# 문제에서 직원의 이름과 출입상태를 입력해라고 할때
# 바로 딕셔너리를 이용해서 이름을 key값 출입상태를 value값으로 두면 편하겠다 싶어서 그렇게 풀었더니 쉽게 풀어졌다.
# 딕셔너리를 활용해서 검색 속도도 아주 빠르다

# 사전의 역순으로 출력하는 다른방법
worker.sort(reverse = True) # 방법1
worker = sorted(reverse=True) # 방법2

# 나는야 포켓몬 마스터 이다솜 1620
# 입력
# 첫째 줄에는 도감에 수록되어 있는 포켓몬의 개수 N이랑 내가 맞춰야 하는 문제의 개수 M이 주어져. N과 M은 1보다 크거나 같고, 100,000보다 작거나 같은 자연수인데, 자연수가 뭔지는 알지? 모르면 물어봐도 괜찮아. 나는 언제든지 질문에 답해줄 준비가 되어있어.

# 둘째 줄부터 N개의 줄에 포켓몬의 번호가 1번인 포켓몬부터 N번에 해당하는 포켓몬까지 한 줄에 하나씩 입력으로 들어와. 포켓몬의 이름은 모두 영어로만 이루어져있고, 또, 음... 첫 글자만 대문자이고, 나머지 문자는 소문자로만 이루어져 있어. 아참! 일부 포켓몬은 마지막 문자만 대문자일 수도 있어. 포켓몬 이름의 최대 길이는 20, 최소 길이는 2야. 그 다음 줄부터 총 M개의 줄에 내가 맞춰야하는 문제가 입력으로 들어와. 문제가 알파벳으로만 들어오면 포켓몬 번호를 말해야 하고, 숫자로만 들어오면, 포켓몬 번호에 해당하는 문자를 출력해야해. 입력으로 들어오는 숫자는 반드시 1보다 크거나 같고, N보다 작거나 같고, 입력으로 들어오는 문자는 반드시 도감에 있는 포켓몬의 이름만 주어져. 그럼 화이팅!!!

# 출력
# 첫째 줄부터 차례대로 M개의 줄에 각각의 문제에 대한 답을 말해줬으면 좋겠어!!!. 입력으로 숫자가 들어왔다면 그 숫자에 해당하는 포켓몬의 이름을, 문자가 들어왔으면 그 포켓몬의 이름에 해당하는 번호를 출력하면 돼. 그럼 땡큐~

# 풀이

# 입력
import sys

input = sys.stdin.readline
N,M = map(int,input().split())

# 도감
book_num = {}
book_name = {}
# 도감에 번호와 입력받은 포켓몬 추가
for i in range(1,N+1):
    name = input().strip()
    book_num[i] = name
    book_name[name] = i
# 문제 입력
for i in range(M):
    quiz = input().strip()
    if quiz.isdigit() == True:
        quiz = int(quiz)
        print(book_num[quiz])
    else:
        print(book_name[quiz])
# 처음 문제를 풀 때는 딕셔너리를 두개 만들어서 저장할 생각을 하지못하고 하나의 딕셔너리로 출력을 하려다 보니 이름을 입력 받았을때 숫자를 출력하는 과정에서 시간복잡도가 너무 증가해 버린다
# 그래서 이름과 번호를 저장하는 각각의 딕셔너리를 만들어서 문제의 유형별로 대응하여 출력하게 만들었다.